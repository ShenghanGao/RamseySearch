#include "clique_count.h"
#include "graph.h"
#include "stdio.h"
int main() {
	int* g;
	int gsize;
	int i, j, count, best_count = 10000000, best_i, best_j;
	ReadGraph("ce", &g, &gsize);
	PrintGraph(g, gsize);
	i = 70, j = 80;
	printf("Preflip (%d, %d)\n", i, j);
/*	g[i * gsize + j] = 1 - g[i * gsize + j];
	i = 69, j = 70;
	printf("Preflip (%d, %d)\n", i, j);
	g[i * gsize + j] = 1 - g[i * gsize + j];
	i = 64, j = 79;
	printf("Preflip (%d, %d)\n", i, j);
	g[i * gsize + j] = 1 - g[i * gsize + j];
	i = 50, j = 70;
	printf("Preflip (%d, %d)\n", i, j);
	g[i * gsize + j] = 1 - g[i * gsize + j];
	i = 70, j = 79;
	printf("Preflip (%d, %d)\n", i, j);
	g[i * gsize + j] = 1 - g[i * gsize + j];*/


//	i = 70, j = 76;
	g[i * gsize + j] = 1 - g[i * gsize + j];
	best_count = CliqueCount(g, gsize);
	for(i = 0; i < 88; i ++) {
		for(j = i + 1; j < 88; j ++) {
			g[i * gsize + j] = 1 - g[i * gsize + j];
			count = CliqueCount(g, gsize);
			printf("(%d, %d) count %d\n", i, j, count);
//			printf("finish\n");
			if(count < best_count) {
				best_count = count;
				best_i = i;
				best_j = j;
			}
			g[i * gsize + j] = 1 - g[i * gsize + j];
		}
	}
//	g[best_i * gsize + best_j] = 1 - g[best_i * gsize + best_j];
	printf("Flip (%d, %d) bestcount = %d \n", i, j, best_count);
	free(g);
	return 0;
}
